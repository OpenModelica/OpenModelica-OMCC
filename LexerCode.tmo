encapsulated package %LexerCode% // Generated %time%
  /*
   Template for Lexer Code
   replace keywords:
   %LexerCode
   %time
   %Token
   %Lexer
   %LexTable
   %constant
   %nameSpan
   %functions
   %caseAction
  */
import Types;
import OMCCBaseLexer;
import OMCCTypes;
import Error;

extends OMCCBaseLexer;
redeclare package LexTable
%LexTable%
end LexTable;
%prologue%
redeclare function extends action
protected
  OMCCTypes.Info info;
  String sToken;
  Integer nameSpan,act2;
algorithm
  mm_startSt := startSt;
  nameSpan := %nameSpan%;
  act2 := act;
  bufferRet := 0;
  (token) := match (act)
    local
      OMCCTypes.Token tok;
%caseAction%
    else
      equation
        print("\nLexer unknown rule, action="+String(act)+"\n");
        tok = OMCCTypes.TOKEN("",act,fileContents,mm_pos-buffer,buffer,lineNrStart,mm_ePos+1,mm_linenr,mm_sPos+1);
        print(OMCCTypes.printToken(tok));
      then fail();
  end match;
end action;

%Tokens%%epilogue%
end %LexerCode%;
